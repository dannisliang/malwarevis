using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Xml;

class Node{
	public int id;
    public string codeBlock;
    public string startAddress;
    public List<string> childAddress;
    public string lastAddress; //address of jmp instruction
	public Node()
	{
		id = -1;
		codeBlock = "";
		childAddress=null;
		lastAddress = "";
        startAddress = "";
	}
} ;

namespace XMLParser
{
    class Program
    {
        static void Main(string[] args)
        {
            List <Node> nodes= new List<Node>();
            using (XmlReader reader = XmlReader.Create(@"C:\Users\Swastik\Documents\Visual Studio 2013\Projects\AssemblyParser\AssemblyParser\output.xml"))
            {
                while (reader.Read())
                {
                    if (reader.IsStartElement())
                    {
                        //return only when you have START tag
                       //reader.ReadSubtree();
                        if (reader.IsStartElement())
                        {
                            //reader.ReadSubtree();
                            if (reader.Name.ToString() == "node")
                            {
                                Node node = new Node();
                                using(XmlReader childreader=reader.ReadSubtree())
                                {
                                    while (childreader.Read())
                                    {
                                        if (childreader.IsStartElement())
                                        {
                                            
                                            switch (childreader.Name.ToString())
                                            {

                                                case "id":
                                                    node.id=int.Parse(childreader.ReadString());
                                                    //Console.WriteLine("Name of the Element is : " + reader.ReadString());
                                                    break;

                                                case "StartAddress":
                                                    node.startAddress=childreader.ReadString();
                                                    Console.WriteLine("Your Location is : " + reader.ReadString());
                                                    break;
                                                case "LastAddress":
                                                    node.lastAddress=childreader.ReadString();
                                                    Console.WriteLine("Your Location is : " + reader.ReadString());
                                                    break;
                                                case "CodeBlock":
                                                    
                                                    node.codeBlock=childreader.ReadInnerXml();
                                                    node.codeBlock = node.codeBlock.Replace("<![CDATA[", "");
                                                    node.codeBlock = node.codeBlock.Replace("]]>", "");
                                                    //Console.WriteLine("Your Location is : " + reader.ReadString());
                                                    break;
                                                case "ChildAddresses":
                                                    List<string> childAddresses=new List<string>();
                                                    using (XmlReader childchildreader = childreader.ReadSubtree())
                                                    {
                                                        while (childchildreader.Read())
                                                        {
                                                            if (childchildreader.IsStartElement())
                                                            {
                                                                switch (childchildreader.Name.ToString())
                                                                {
                                                                    case "Address":
                                                                        childAddresses.Add(childchildreader.ReadString());
                                                                        break;
 
                                                                }
                                                            }
                                                        }
                                                    }
                                                    node.childAddress=childAddresses;
                                                    break;

                                            }
                                        }
                                        
                                    }
                                    
                                }
                                nodes.Add(node);
                                //reader.ReadToNextSibling();
                            }
                            
                        }
                        
                    }
                    Console.WriteLine("");
                }
            }
        }
    }
}
